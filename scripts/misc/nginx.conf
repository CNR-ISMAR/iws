user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;
  error_log /var/log/nginx/error.log;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  #gzip  on;
  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }


  server{
    #listen 80;
    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/seastorms.eu/seastorms.eu.chain.crt;
    ssl_certificate_key /etc/ssl/private/seastorms.eu.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    server_name seastorms.eu iws.seastorms.eu

    index index.html index.htm;
    root   /mnt/volumes/statics/;



    location /{
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
        add_header Access-Control-Allow-Credentials true;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        add_header Access-Control-Max-Age 1728000;
        add_header X-Frame-Options "allow-from iws.seastorms.eu";
        return 200;
      }
      try_files $uri @django;
    }

    location @django {

      etag off;
      expires 0;
      include uwsgi_params;
      uwsgi_pass uwsgi://django:8000;

      add_header Access-Control-Allow-Credentials false;
      add_header Access-Control-Allow-Headers "Content-Type, Accept, Authorization, Origin, User-Agent";
      add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
    }


    location /geoserver {
      etag off;
      expires 0;
      proxy_pass http://geoserver:8080/geoserver;

      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
    }

    location /measurements/ {
      add_header X-Frame-Options "allow-from iws.seastorms.eu";
      proxy_pass http://grafana:3000/;
    }


    location /openistorms {
       root /var/www/html/seastorms.eu;
    }

    location /grafana {
       root /var/www/html/grafana;
       #return 301 https://iws.ismar.cnr.it/grafana/;
    }



    etag on;
    gzip on;

    client_max_body_size 100M;
    client_body_buffer_size 128K;

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    uwsgi_read_timeout          600;

    expires 1d;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

 }
  server{
    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/seastorms.eu/seastorms.eu.crt;
    ssl_certificate_key /etc/ssl/private/seastorms.eu.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    server_name www.seastorms.eu;
    root /var/www/html/openistorms;
    index index.html;
 }

    #include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/nginxconf/*.conf;
}
